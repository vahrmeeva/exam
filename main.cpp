#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/**
 * Подаётся на вход матрица узлов. Если на месте с индексом [i][j] стоит 0, значит на этом месте есть узел,
 иначе узел отсутствует. Нужно для каждого узла вывести координаты самого узла, а также ближайшие
 правого и нижнего соседей, если они существуют.
 Если какой-то из них отсутствует, вместо его координат нужно вывести -1 -1.
 **/

int main()
{
    int width; // ширина входной матрицы
    cin >> width; cin.ignore();// для перефода на следующую страну чтобы гет лайн нормально работал
    int height; // высота входной матрицы
    cin >> height; cin.ignore();
    char arr[width][height]; // двумерный массив для хранения входных данных
    cerr << width << " " << height << endl; // то такое серр
    for (int i = 0; i < height; i++) { // проходим по строкам
        string line; // символы задаются строкой, потом мы их разбиваем
        getline(cin, line); //считываем строку
        cerr <<  line << endl;
        for(int j = 0; j < width; j++) { // проходим по столбцам
            arr[j][i] = line[j]; //записываем каждый символ входной строки в массив тут мы как раз записываем в ячейку массива символ из строки
        }
    }

    for(int i = 0; i < height; i++){ //Проходимся по матрице
        for(int j = 0; j < width; j++){
            if(arr[j][i] != '.'){ //Если на [i][j]-месте есть узел, то
                cout << j << " " << i << " "; //выводим сам узел
                int r = j + 1; //так как жи уже, добовляем р чтобы не сбилось жи
                while(r < width && arr[r][i] == '.') //идем по строке. Пока не дошли до конца или не встретили узел, увеличиваем r.
                    r++;
                if(r < width && arr[r][i] != '.') //Если после этого на месте r в строке стоит узел, выводим его дошли ли мы до конца строки или нет
                    cout << r << " " << i << " ";
                else                                //Иначе выводим -1 -1
                    cout << -1 << " " << -1 << " ";

                int b = i + 1;
                while(b < height && arr[j][b] == '.') //идем по столбцу. Пока не дошли до конца или не встретили узел, увеличиваем b.
                    b++;
                if(b < height && arr[j][b] != '.') //Если после этого на месте b в столбце стоит узел, выводим его
                    cout << j << " " << b << endl;
                else                                //Иначе выводим -1 -1
                    cout << -1 << " " << -1 << endl;
            }
        }
    }

}